[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[dependency-groups]
dev = [
  "pylint>=3.3.7",
  "pytest>=8.3.5",
  "ruff>=0.12.3"
]
test = ["mypy>=1.16.1", "pydoclint>=0.5.11", "types-requests>=2.32.4.20250611"]

[project]
dependencies = [
  "requests>=2.28.0",
  "beautifulsoup4>=4.11.0",
  "pylint>=2.15.0",
  "toml-sort>=0.24.0"
]
description = "Precommit hook to sync pylint configuration with ruff implementation status"
license = {text = "MIT"}
name = "pylint-ruff-sync"
readme = "README.md"
requires-python = ">=3.11"
version = "0.1.0"

[project.optional-dependencies]
test = [
  "pre-commit>=2.20.0",
  "ruff>=0.1.6",
  "mypy>=1.7.1",
  "types-requests>=2.28.0",
  "types-beautifulsoup4>=4.11.0",
  "pytest>=7.0.0",
  "pytest-cov>=4.0.0"
]

[project.scripts]
pylint-ruff-sync = "pylint_ruff_sync.main:main"

[tool.hatch.build.targets.wheel]
packages = ["src/pylint_ruff_sync"]

[tool.mypy]
check_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
explicit_package_bases = true
mypy_path = "src:scripts"
no_implicit_optional = true
python_version = "3.11"
strict = true
strict_equality = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pydoclint]
allow-init-docstring = true
arg-type-hints-in-docstring = false
baseline = ".config/pydoclint-baseline.txt"
check-return-types = false
exclude = "\\.git|\\.tox|\\.venv|build|out|venv"
should-document-private-class-attributes = true
show-filenames-in-every-violation-message = true
skip-checking-short-docstrings = false
style = "google"

[tool.pylint.basic]
good-names = "i,j,k,ex,Run,_,f,fh"
ignore = ["_version.py"]
jobs = 0
no-docstring-rgx = "__.*__"

[tool.pylint.classes]
max-attributes = 20
min-public-methods = 0

[tool.pylint.format]
max-line-length = 100

[tool.pylint.messages_control]
disable = ["all", "locally-disabled", "suppressed-message"]
enable = [
  "disallowed-name", # Disallowed name "%s"
  "unnecessary-negation", # Consider changing "%s" to "%s"
  "consider-using-enumerate", # Consider using enumerate instead of iterating with range and len
  "bad-mcs-method-argument", # Metaclass method %s should have %s as first argument
  "bad-mcs-classmethod-argument", # Metaclass class method %s should have %s as first argument
  "consider-using-f-string", # Formatting a regular string which could be an f-string
  "too-many-lines", # Too many lines in module (%s/%s)
  "superfluous-parens", # Unnecessary parens after %r keyword
  "mixed-line-endings", # Mixed line endings LF and CRLF
  "unexpected-line-ending-format", # Unexpected line ending format. There is '%s' while it should be '%s'.
  "wrong-spelling-in-comment", # Wrong spelling of a word '%s' in a comment:
  "wrong-spelling-in-docstring", # Wrong spelling of a word '%s' in a docstring:
  "invalid-characters-in-docstring", # Invalid characters %r in a docstring
  "use-implicit-booleaness-not-comparison", # "%s" can be simplified to "%s", if it is strictly a sequence, as an empty %s is falsey
  "use-implicit-booleaness-not-comparison-to-string", # "%s" can be simplified to "%s", if it is strictly a string, as an empty string is falsey
  "use-implicit-booleaness-not-comparison-to-zero", # "%s" can be simplified to "%s", if it is strictly an int, as 0 is falsey
  "bad-file-encoding", # PEP8 recommends UTF-8 as encoding for Python files
  "unrecognized-inline-option", # Unrecognized file option %r
  "bad-plugin-value", # Plugin '%s' is impossible to load, is it installed ? ('%s')
  "bad-configuration-section", # Out-of-place setting encountered in top level configuration-section '%s' : '%s'
  "unrecognized-option", # Unrecognized option found: %s
  "return-arg-in-generator", # Return with argument inside generator
  "duplicate-argument-name", # Duplicate argument name %r in function definition
  "access-member-before-definition", # Access to member %r before its definition line %s
  "no-method-argument", # Method %r has no argument
  "class-variable-slots-conflict", # Value %r in slots conflicts with class variable
  "declare-non-slot", # No such name %r in __slots__
  "invalid-length-hint-returned", # __length_hint__ does not return non-negative integer
  "invalid-getnewargs-returned", # __getnewargs__ does not return a tuple
  "invalid-getnewargs-ex-returned", # __getnewargs_ex__ does not return a tuple containing (tuple, dict)
  "possibly-used-before-assignment", # Possibly using variable %r before assignment
  "no-name-in-module", # No name %r in module %r
  "bad-except-order", # Bad except clauses order (%s)
  "invalid-slice-step", # Slice step cannot be 0
  "logging-unsupported-format", # Unsupported logging format character %r (%#02x) at index %d
  "logging-format-truncated", # Logging format string ends in middle of conversion specifier
  "invalid-character-carriage-return", # Invalid unescaped character carriage-return, use "\\n" instead.
  "positional-only-arguments-expected", # `%s()` got some positional-only arguments passed as keyword arguments: %s
  "invalid-field-call", # Invalid usage of field(), %s
  "modified-iterating-dict", # Iterated dict '%s' is being modified inside for loop body, iterate through a copy of it instead.
  "astroid-error", # %s: %s
  "parse-error", # error while code parsing: %s
  "config-parse-error", # error while parsing the configuration: %s
  "method-check-failed", # Unable to check methods signature (%s / %s)
  "raw-checker-failed", # Unable to run raw checkers on built-in module %s
  "bad-inline-option", # Unable to consider inline option %r
  "file-ignored", # Ignoring entire file
  "useless-suppression", # Useless suppression of %s
  "deprecated-pragma", # Pragma "%s" is deprecated, use "%s" instead
  "c-extension-no-member", # %s %r has no %r member%s, but source is unavailable. Consider adding this module to extension-pkg-allow-list if you want to perform analysis based on run-time introspection of living objects.
  "useless-option-value", # Useless option value for '%s', %s
  "cyclic-import", # Cyclic import (%s)
  "duplicate-code", # Similar lines in %s files
  "too-many-ancestors", # Too many ancestors (%s/%s)
  "too-many-instance-attributes", # Too many instance attributes (%s/%s)
  "too-few-public-methods", # Too few public methods (%s/%s)
  "consider-using-ternary", # Consider using ternary (%s)
  "stop-iteration-return", # Do not raise StopIteration in generator, use return statement instead
  "simplify-boolean-expression", # Boolean expression may be simplified to %s
  "consider-swap-variables", # Consider using tuple unpacking for swapping variables
  "consider-using-join", # Consider using str.join(sequence) for concatenating strings from an iterable
  "chained-comparison", # Simplify chained comparison between the operands
  "simplifiable-condition", # Boolean condition "%s" may be simplified to "%s"
  "condition-evals-to-constant", # Boolean condition '%s' will always evaluate to '%s'
  "unnecessary-list-index-lookup", # Unnecessary list index lookup, use '%s' instead
  "unknown-option-value", # Unknown option value for '%s', expected a valid pylint message and got '%s'
  "unreachable", # Unreachable code
  "pointless-string-statement", # String statement has no effect
  "confusing-with-statement", # Following "as" with another context manager looks like a tuple.
  "using-constant-test", # Using a conditional statement with a constant value
  "missing-parentheses-for-call-in-test", # Using a conditional statement with potentially wrong function or method call due to missing parentheses
  "redeclared-assigned-name", # Redeclared variable %r in assignment
  "return-in-finally", # 'return' shadowed by the 'finally' clause.
  "contextmanager-generator-missing-cleanup", # The context used in function %r will not be exited.
  "attribute-defined-outside-init", # Attribute %r defined outside __init__
  "implicit-flag-alias", # Flag member %(overlap)s shares bit positions with %(sources)s
  "abstract-method", # Method %r is abstract in class %r but is not overridden in child class %r
  "super-init-not-called", # __init__ method from base class %r is not called
  "non-parent-init-called", # __init__ method from a non direct base class %r is called
  "arguments-renamed", # %s %s %r method
  "unused-private-member", # Unused private member `%s.%s`
  "redefined-slots-in-subclass", # Redefined slots %r in subclass
  "useless-parent-delegation", # Useless parent or super() delegation in method %r
  "preferred-module", # Prefer importing %r instead of %r
  "shadowed-import", # Shadowed %r (imported line %s)
  "unused-wildcard-import", # Unused import(s) %s from wildcard import of %s
  "redefined-outer-name", # Redefining name %r from outer scope (line %s)
  "undefined-loop-variable", # Using possibly undefined loop variable %r
  "possibly-unused-variable", # Possibly unused variable %r
  "raising-format-tuple", # Exception arguments suggest string formatting might be intended
  "arguments-out-of-order", # Positional arguments appear to be out of order
  "kwarg-superseded-by-positional-arg", # %r will be included in %r since a positional-only parameter with this name already exists
  "bad-format-string-key", # Format string dictionary key should be a string, not %s
  "invalid-format-index", # Using invalid lookup key %r in format specifier %r
  "duplicate-string-formatting-argument", # Duplicate string formatting argument %r, consider passing as named argument
  "anomalous-unicode-escape-in-string", # Anomalous Unicode escape in byte string: '%s'. String constant might be missing an r or u prefix.
  "boolean-datetime", # Using datetime.time in a boolean context.
  "redundant-unittest-assert", # Redundant use of %s with constant value %r
  "shallow-copy-environ", # Using copy.copy(os.environ). Use os.environ.copy() instead.
  "using-f-string-in-unsupported-version", # F-strings are not supported by all versions included in the py-version setting
  "using-exception-groups-in-unsupported-version", # Exception groups are not supported by all versions included in the py-version setting
  "using-generic-type-syntax-in-unsupported-version", # Generic type syntax (PEP 695) is not supported by all versions included in the py-version setting
  "using-assignment-expression-in-unsupported-version", # Assignment expression is not supported by all versions included in the py-version setting
  "using-positional-only-args-in-unsupported-version", # Positional-only arguments are not supported by all versions included in the py-version setting
  "missing-timeout", # Missing timeout argument for method '%s' can cause your program to hang indefinitely
  "bad-chained-comparison", # Suspicious %s-part chained comparison using semantically incompatible operators (%s)
  "modified-iterating-list", # Iterated list '%s' is being modified inside for loop body, consider iterating through a copy of it instead.
  "deprecated-module", # Deprecated module %r
  "deprecated-method", # Using deprecated method %s()
  "deprecated-argument", # Using deprecated argument %s of method %s()
  "deprecated-decorator", # Using deprecated decorator %s()
  "deprecated-attribute" # Using deprecated attribute %r
]

[tool.pylint.reports]
output-format = "colorized"

[tool.pylint.similarities]
ignore-comments = true
ignore-docstrings = true
ignore-imports = true
min-similarity-lines = 20

[tool.ruff]
fix = true
line-length = 88
target-version = "py311"

[tool.ruff.lint]
ignore = ["D203", "D211", "D213", "COM812"]
select = ["ALL"]

[tool.ruff.lint.per-file-ignores]
"src/pylint_ruff_sync/toml_file.py" = ["S603", "S607"]
"tests/**" = ["S101", "SLF001", "EXE001"]

[tool.tomlsort]
in_place = true
sort_inline_tables = true
sort_table_keys = true
